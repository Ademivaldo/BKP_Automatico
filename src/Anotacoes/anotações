
				IDEIA 
Criar uma list<String> para adicionar o nome das pastas que estão
 diferentes da pasta de destino. Comando para criar pastas com os nomes que
estão na List<> Copiar de modo recursivo a pasta na origem para sobrescrever
na pasta destino
		 
		 
		 	// System.out.println("Contem "+listPastaDiferenteNome.size() +" a mais "
					// + "Sendo elas: "+listPastaDiferenteNome.get(0) +" e tipo:"
					// + listPastaDiferenteNome.get(0).getClass());
		 
		 
		 riarPastas pa = new CriarPastas(1,1,"a","a");
				 System.out.println(pasta1.get(1));

				 String[] nomePasta_D = new String[pasta1.size()];
				 pasta1 = pasta1.subList(0,2);
				 for(i =0; i < pasta1.size(); i++) {
				 nomePasta_D[i] = pasta1.get(i);

				 System.out.println("Posição #"+(i+1) +"" + nomePasta_D[i]);
				
				 }
				 Pasta2 está como uma unica String, sendo asisim não possue index maior que 0

				 System.out.println(nomePastaD);
				 System.out.println(nomePastaO);

				 CriarPastas criar = new
				 CriarPastas(contadorO,contadorD,arquivosEncontradosO,arquivosEncontradosD);

				
				  condiçoes funciona if(pastaOrigemNome[0].equals(pastaDestinoNome[1])){
				  if(pastaOrigemData[0].equals(pastaDestinoData[0])) {
				  System.out.println("Nesse caso não vai copiar essa pasta"); }else {
				  System.out.println("Data Diferente. Seria copiado"); } }else {
				  System.out.println("Nome Diferente, não faria nada. A pasta destino precisa "
				  + "conter a mesma quantidade de pasta " + "e com o mesmo nome"); }
				 

				
				  for(int j = 0; j<dadosOD.length; j++) { System.out.println("Fileira "+j
				  +" nome: " + dadosON[j] + " data: " +dadosOD[j] );
				  
				  } System.out.println("-------------------------------------------"); for(int
				  j = 0; j<dadosDD.length; j++) { System.out.println("Fileira "+j +" nome: " +
				  dadosDN[j] + " data: " +dadosDD[j] );
				  
				  }
				 

				
				  for (File arquivo : arquivosEncontradosD) { long ultimaModificacaoMili =
				  arquivo.lastModified(); Date ultimaModificacao = new
				  Date(ultimaModificacaoMili);
				  
				  System.out.println("Nome do arquivo: " + arquivo.getName());
				  System.out.println("Data Ultima alteração: " + ultimaModificacao);
				  System.out.println(arquivosEncontradosO.size()+" " +contadorD); }
				 

			}

			 CopiarPasta.CopiaPasta(pasta.getOrigem(),pasta.getDestino());
			 System.out.println("Pasta copiada com sucesso!");
			 
			  System.out.println("Nome do arquivo: " + arquivo.getName());
				 System.out.println("Data Ultima alteração: " + ultimaModificacao);
				 System.out.println(arquivosEncontradosO.size()+" " +contadorO);
			 
			 
			 System.out.println("TESTE PEGAR DATA\n");
				System.out.println("Origem___\n");
				/*int contadorPegarData=0;
				for (String elemento :listPastaOrigemNome ){
						Date elemento1=listPastaOrigemData.get(contadorPegarData) ;
						System.out.println("Nome: "+elemento+" data: "+elemento1);
					contadorPegarData++;
					
				}
				System.out.println("\nDestino___\n");
				contadorPegarData=0;
				for (String elemento :listPastaDestinoNome ){
					Date elemento1=listPastaDestinoData.get(contadorPegarData) ;
					System.out.println("Nome: "+elemento+" data: "+elemento1);
					contadorPegarData++;
				
			}